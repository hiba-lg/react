{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\my-app\\\\src\\\\hooks\\\\State.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function State() {\n  _s();\n  const [value, setValue] = useState([]);\n  const [valueId, setValueId] = useState(4);\n  fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(data => setValue(data));\n  function update() {\n    //setValue('salma')\n    setValueId(prev => prev + 1);\n  }\n  function updateDown() {\n    //setValue('salma')\n    setValueId(prev => prev - 1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: update,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), value.map(pst => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pst.id === valueId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [pst.id, \":\", pst.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 30\n        }, this)\n      }, void 0, false) : \"\"\n    }, void 0, false))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n/*import React , {useState} from 'react'\r\n\r\nexport default function State() {\r\n const [value,setValue]=useState(0)\r\n\r\n function update(){\r\n    //setValue('salma')\r\n    setValue(prev=>prev+1)\r\n }\r\n function updateDown(){\r\n    //setValue('salma')\r\n    setValue(prev=>prev-1)\r\n }\r\n  return (\r\n    <div>\r\n       <h1>{value}</h1>\r\n    <button onClick={update}>+</button>{ '      '}\r\n    <button onClick={updateDown}>-</button>\r\n    </div>\r\n  )\r\n}*/\n_s(State, \"PEIF4BBR/r5R6E4z1KpcBDfXr6A=\");\n_c = State;\nvar _c;\n$RefreshReg$(_c, \"State\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","State","_s","value","setValue","valueId","setValueId","fetch","then","res","json","data","update","prev","updateDown","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","pst","id","title","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/my-app/src/hooks/State.jsx"],"sourcesContent":["import React, {useState}from 'react'\r\n\r\nexport default function State() {\r\n    \r\n    const [value,setValue]=useState([])\r\n    const [valueId,setValueId]=useState(4)\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n    .then((res)=>res.json())\r\n    .then((data)=>setValue(data))\r\n    function update(){\r\n      //setValue('salma')\r\n      setValueId(prev=>prev+1)\r\n   }\r\n   function updateDown(){\r\n      //setValue('salma')\r\n      setValueId(prev=>prev-1)\r\n   }\r\n  return (\r\n    <div>\r\n        <button onClick={update}>+</button>\r\n        <button onClick={updateDown}>-</button>\r\n     {value.map((pst)=>(\r\n      <>\r\n     \r\n      {pst.id===valueId ?( <><h1>{pst.id}:{pst.title}</h1></>):(\"\") \r\n      \r\n        }\r\n</>\r\n     )\r\n     )}\r\n     \r\n\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React , {useState} from 'react'\r\n\r\nexport default function State() {\r\n const [value,setValue]=useState(0)\r\n\r\n function update(){\r\n    //setValue('salma')\r\n    setValue(prev=>prev+1)\r\n }\r\n function updateDown(){\r\n    //setValue('salma')\r\n    setValue(prev=>prev-1)\r\n }\r\n  return (\r\n    <div>\r\n       <h1>{value}</h1>\r\n    <button onClick={update}>+</button>{ '      '}\r\n    <button onClick={updateDown}>-</button>\r\n    </div>\r\n  )\r\n}*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACS,OAAO,EAACC,UAAU,CAAC,GAACV,QAAQ,CAAC,CAAC,CAAC;EACtCW,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAGP,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC7B,SAASC,MAAMA,CAAA,EAAE;IACf;IACAN,UAAU,CAACO,IAAI,IAAEA,IAAI,GAAC,CAAC,CAAC;EAC3B;EACA,SAASC,UAAUA,CAAA,EAAE;IAClB;IACAR,UAAU,CAACO,IAAI,IAAEA,IAAI,GAAC,CAAC,CAAC;EAC3B;EACD,oBACEf,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAQkB,OAAO,EAAEJ,MAAO;MAAAG,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnCtB,OAAA;MAAQkB,OAAO,EAAEF,UAAW;MAAAC,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCjB,KAAK,CAACkB,GAAG,CAAEC,GAAG,iBACdxB,OAAA,CAAAE,SAAA;MAAAe,QAAA,EAECO,GAAG,CAACC,EAAE,KAAGlB,OAAO,gBAAIP,OAAA,CAAAE,SAAA;QAAAe,QAAA,eAAEjB,OAAA;UAAAiB,QAAA,GAAKO,GAAG,CAACC,EAAE,EAAC,GAAC,EAACD,GAAG,CAACE,KAAK;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,gBAAE,CAAC,GAAG;IAAG,gBAGjE,CAEG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAER;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBAlB,EAAA,CA9CwBD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}